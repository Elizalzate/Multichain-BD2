# multichaind Art@192.168.1.30:9541  	  -->  Dirección del blockchain 
# 1QaCfLtBsR4ZTXcMbobvQUvSAztLwmgUzByq25  -->  Dirección del nodo a conectar
# 1aoDUx11q8D9ujrktXwpSa3wKFYGHgutAFsFrn  -->  Dirección local del nodo conectado en el nodo admin

## INICIO EJECUCION

# Crear la blockchain Art, conectar un segundo nodo, crear streams "Obras"y "Autores" (10%)
multichain-util create Art                                                  			# Se ejecuta en nodo admin
multichaind Art -daemon																	# Se ejecuta en nodo admin
multichain-cli Art create stream Obras "{\"restrict\":\"write\"}"						# Se ejecuta en nodo admin
multichain-cli Art create stream Autores "{\"restrict\":\"write\"}"						# Se ejecuta en nodo admin

# Conectar otro nodo
multichain-cli Art grant 1QaCfLtBsR4ZTXcMbobvQUvSAztLwmgUzByq25 connect					# Se ejecuta en nodo admin
multichain-cli Art grant 1QaCfLtBsR4ZTXcMbobvQUvSAztLwmgUzByq25 send					# Se ejecuta en nodo admin
multichain-cli Art grant 1QaCfLtBsR4ZTXcMbobvQUvSAztLwmgUzByq25 Autores.read			# Se ejecuta en nodo admin
multichain-cli Art grant 1QaCfLtBsR4ZTXcMbobvQUvSAztLwmgUzByq25 Autores.write			# Se ejecuta en nodo admin
multichain-cli Art grant 1QaCfLtBsR4ZTXcMbobvQUvSAztLwmgUzByq25 Obras.read				# Se ejecuta en nodo admin
multichain-cli Art grant 1QaCfLtBsR4ZTXcMbobvQUvSAztLwmgUzByq25 Obras.write				# Se ejecuta en nodo admin
multichaind Art@192.168.1.30:9541 -daemon      											# Se ejecuta en nodo a conectar

# Crear los siguientes smart filters: (30%)  (Se ejecutan en nodo admin)

multichain-cli Art create streamfilter filtroAutores "{}" "function filterstreamitem(){ var obj = getfilterstreamitem(); if(obj.keys.length != 1) return \"El elemento debe tener una única clave\"; if(!(obj.data.json)) return \"Solo se permiten elementos de tipo JSON\"; if(Object.keys(obj.data.json).length != 3 || Object.keys(obj.data.json).indexOf(\"nombre\") === -1 || Object.keys(obj.data.json).indexOf(\"agno_nacimiento\") === -1 || Object.keys(obj.data.json).indexOf(\"correo\") === -1) return \"Solo se deben tener tres campos que deben ser: nombre, agno_nacimiento y correo\";}"

multichain-cli Art create streamfilter filtroObras "{}" "function filterstreamitem(){ var obj = getfilterstreamitem(); if(obj.keys.length != 2) return \"El elemento debe tener exactamente 2 claves\"; if(!(obj.data.json)) return \"Solo se permiten elementos de tipo JSON\"; if(Object.keys(obj.data.json).length != 2 || Object.keys(obj.data.json).indexOf(\"fecha_creacion\") === -1 || Object.keys(obj.data.json).indexOf(\"obra\") === -1) return \"Solo se deben tener dos campos que deben ser: fecha_creacion y obra\";}"

multichain-cli Art approvefrom 1aoDUx11q8D9ujrktXwpSa3wKFYGHgutAFsFrn filtroAutores "{\"for\": \"Autores\", \"approve\": true}"
multichain-cli Art approvefrom 1aoDUx11q8D9ujrktXwpSa3wKFYGHgutAFsFrn filtroObras "{\"for\": \"Obras\", \"approve\": true}"

# Para probar los stream filters

multichain-cli Art subscribe Autores         # Se ejecuta en ambos nodos
multichain-cli Art subscribe Obras			 # Se ejecuta en ambos nodos

# Inserción de datos (se ejecutan en nodo a conectar)

multichain-cli Art publish Autores "autor1" "{\"json\":{\"nombre\":\"John Doe\",\"agno_nacimiento\":\“1980\",\"correo\":\“johnd@email.com\"}}"						# Objeto que pasa
multichain-cli Art publish Autores "autor2" "{\"json\":{\"nombre2\":\"John Doe\",\"agno_nacimiento\":\“1980\",\"correo\":\“johnd@email.com\"}}"						# Objeto que no pasa
multichain-cli Art publish Autores "autor2" "{\"json\":{\"agno_nacimiento\":\“1980\",\"correo\":\“johnd@email.com\"}}"												# Objeto que no pasa
multichain-cli Art publish Autores "[\"autor2\", \"autor3\"]" "{\"json\":{\"nombre2\":\"John Doe\",\"agno_nacimiento\":\“1980\",\"correo\":\“johnd@email.com\"}}"   # Objeto que no pasa
multichain-cli Art publish Autores "autor2" 012345																													# Objeto que no pasa

multichain-cli Art publish Obras "[\"autor1\", \"obra1\"]" "{\"json\":{\"fecha_creacion\":\"5/5/2005\",\"obra\":\"miNovela\"}}"										# Objeto que pasa
multichain-cli Art publish Obras "autor2" "{\"json\":{\"fecha_creacion\":\"5/5/2005\",\"obra\":\"miNovela\"}}"														# Objeto que no pasa
multichain-cli Art publish Obras "[\"autor1\", \"obra2\"]" "{\"json\":{\"obra\":\"miNovela\"}}"																		# Objeto que no pasa
multichain-cli Art publish Obras "[\"autor1\", \"obra2\"]" "{\"json\":{\"nombre2\":\"John Doe\",\"fecha_creacion\":\"5/5/2005\",\"obra\":\"miNovela\"}}"    		# Objeto que no pasa
multichain-cli Art publish Obras "[\"autor1\", \"obra2\"]" 012345																									# Objeto que no pasa

## FIN EJECUCION

# SmartFilters

Filtro Autores

function filterstreamitem(){ 
	var obj = getfilterstreamitem(); 
	if(obj.keys.length != 1){
		return "El elemento debe tener una única clave"; 
	} if(!(obj.data.json)) {
		return "Solo se permiten elementos de tipo JSON";
	} if( Object.keys(obj.data.json).length != 3 || Object.keys(obj.data.json).indexOf(\"nombre\") === -1 || Object.keys(obj.data.json).indexOf(\"agno_nacimiento\") === -1 || Object.keys(obj.data.json).indexOf(\"correo\") === -1) {
		return "Solo se deben tener tres campos que deben ser: nombre, agno_nacimiento y correo";
	}
}

Filtro Obras

function filterstreamitem(){ 
	var obj = getfilterstreamitem(); 
	if(obj.keys.length != 2) {
		return "El elemento debe tener exactamente 2 claves";
	} if(!(obj.data.json)) {
		return "Solo se permiten elementos de tipo JSON";
	} if(Object.keys(obj.data.json).length != 2 || Object.keys(obj.data.json).indexOf(\"fecha_creacion\") === -1 || Object.keys(obj.data.json).indexOf(\"obra\") === -1) {
		return \"Solo se deben tener dos campos que deben ser: fecha_creacion y obra\";
	}
}